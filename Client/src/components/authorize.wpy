<template>
  <view wx:if="{{show}}">
    <view class="fade"></view>
    <view class="authorize-contianer">
      <image class="authorize-icon" src="../images/authorize.png">
      <view class="auth-item">申请获取以下权限：</view>
      <view class="auth-item">获取你的公开信息（头像、昵称等）</view>
      <view class="btn-authorize">
        <button
          open-type="getUserInfo"
          type="primary"
          lang="zh_CN"
          bindgetuserinfo="onGetUserInfo"
        >授权</button>
        <button class="btn" type="default" lang="zh_CN" bindtap="reject">拒绝</button>
      </view>
    </view>
  </view>
</template>
<script>
import wepy from "wepy";
import api from "@/api/api";
import {
  SYSTEM_INFO,
  USER_SPECICAL_INFO,
  USER_INFO,
  setGlobal,
  getGlobal
} from "@/utils/constant";

export default class Authorize extends wepy.page {
  config = {
    navigationBarTitleText: "授权登录"
  };
  props = {
    show: {
      default: false
    }
  };
  data = {};
  async onLoad() {
    //console.log("[授权登录]");
    //获取配置
/*     let res = await wepy.getSetting();
    console.log("[当前配置]", res);
    //检查是否授权用户信息
    if (res.authSetting["scope.userInfo"]) {
      //同步获取用户信息
      let userInfo = wepy.getStorageSync(USER_INFO);
      let seesion = wepy.getStorageSync(USER_SPECICAL_INFO);
      console.log("[当前用户]", userInfo);
      console.log("[微信会话]", seesion);
      //如果无法获取用户名
      if (!userInfo || !userInfo.nickName || !seesion) {
        //调用授权用户信息接口
        let data = await wepy.getUserInfo();
        if (data) {
          //存储用户信息
          wepy.setStorageSync(USER_INFO, data.userInfo);
        }
        //调用获取登录凭证接口
        let res = await wepy.login();
        console.log("[登录凭证]", res);
        if (res.code) {
          //同步获取系统信息
          let systemInfo = wepy.getSystemInfoSync();
          console.log("[系统信息]", systemInfo);
          wepy.setStorageSync(SYSTEM_INFO, systemInfo);
          //使用微信Code换取Session
          let rlt = await api.wxJsCode2Session({
            query: {
              jsCode: res.code,
              nickName: data.userInfo.nickName,
              avatarUrl: data.userInfo.avatarUrl
            }
          });
          console.log("[Session信息]" + "<更新>" + rlt.data.result, rlt);
          if (rlt.data.result) {
            let data = rlt.data;
            if (data.data.openid) {
              console.log("[存储登录信息]", data.data);
              wepy.setStorageSync(USER_SPECICAL_INFO, data.data);
            }
          }
        }
      }
    } */
  }
  methods = {
    async onGetUserInfo(e) {
      if (e.detail.errMsg == "getUserInfo:ok") {
        console.log("[成功获取用户信息]");
        let res = await wepy.login();
        if (res.code) {
          wepy.setStorageSync(USER_INFO, e.detail.userInfo);
          let systemInfo = wepy.getSystemInfoSync();
          wepy.setStorageSync(SYSTEM_INFO, systemInfo);
          let rlt = await api.wxJsCode2Session({
            query: {
              jsCode: res.code,
              nickName: e.detail.userInfo.nickName
            }
          }).catch(err=>console.error(err));
          console.log("[获取openId]",rlt);
          if (rlt && rlt.data) {
            let data = rlt.data;
            if (data.openid != null) {
              wepy.setStorageSync(USER_SPECICAL_INFO, data);
              this.$emit("resolve");
            }
          } else {
            let res = await wepy.showModal({
              title: "appid有误",
              content: "授权失败"
            });
            if (res.confirm) {
              this.$emit("reject");
            }
          }
        }
      }else{
        console.log("[用户拒绝提供公开信息]")
        this.$emit("reject");
      }
      this.show = false;
      this.$apply();
    },
    reject() {
      this.show = false;
      this.$emit("reject");
    }
  };
  events = {};
}
</script>
<style lang="less">
//page {
//  height: 100%;
//}
.fade{
	position: absolute;
	top: 0%;
	left: 0%;
	width: 100%;
	height: 100%;
	background-color: #000;
	z-index: 1001;
	-moz-opacity: 0.6;
	opacity: .60;
	filter: alpha(opacity=60);
}

.authorize-contianer {
  z-index: 2001;
  position: fixed;
  width: 550rpx;
  height: 650rpx;
  margin-left: -275rpx;
  top: 15%;
  left: 50%;
  background: #fff;
  text-align: center;
  border-bottom: 1px solid #dbdbdb;
  border-radius: 30rpx;
  //padding-top: 100rpx;
  .authorize-icon {
    width: 128rpx;
    height: 128rpx;
    display: block;
    margin: 20rpx auto;
    padding-bottom: 10rpx;
  }
  .auth-item {
    padding: 5rpx 0;
  }
  .btn-authorize {
    margin: 100rpx 50rpx;
    .btn {
      margin-top: 10rpx;
    }
  }
}
</style>
